name: Deploy Next.js application

on:
  pull_request:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
  REGION: us-east-1
  REPO_NAME: tenderos-frontend

jobs:
  build-and-deploy:
    name: Setup, Build and Deploy
    runs-on: Linux
    steps:
      - name: Checkout
        uses: actions/checkout@v3

        # Authenticate with Google Cloud
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}"

      # Setup gcloud CLI/SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and tag the docker image
        run: |-
          docker build . --tag gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA

      - name: Push the image to the Google Container Registry (GCR)
        run: |-
          docker push gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA

      - name: Deploy
        run: |-
          gcloud run deploy $REPO_NAME \
          --region $REGION \
          --image gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA \
          --platform "managed" \
          --quiet
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps: 
#       - name: Checkout Source
#         uses: actions/checkout@v4
#       - name: Create .env file
#         run: echo "PORT=${{ secrets.PORT }}" >> .env && echo "NEXT_PUBLIC_REST_API_ENDPOINT=${{ secrets.NEXT_PUBLIC_REST_API_ENDPOINT }}" >> .env
#       - name: Build docker image
#         run: docker build -t anthonyrivera/frontend_tenderos .
#       - name: Login to docker hub
#         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#       - name: Publish image to docker hub
#         run: docker push anthonyrivera/frontend_tenderos:latest

#   deploy:
#     needs: build
#     runs-on: Linux
#     steps:
#       - name: Pull image from docker hub
#         run: docker pull anthonyrivera/frontend_tenderos:latest
#       - name: Delete old container
#         run: docker rm -f nextjs-frontend_tenderos-container  
#       - name: Run docker container
#         run: docker run -d -p 3002:3002 --name nextjs-frontend_tenderos-container anthonyrivera/frontend_tenderos 